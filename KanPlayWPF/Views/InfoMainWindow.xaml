<ControlBase:KWindowBase
    xmlns:ControlBase="clr-namespace:KanPlayWPF.ControlBase" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:KanPlayWPF.Views"
        xmlns:vm="clr-namespace:KanPlayWPF.ViewModels"
        xmlns:InfoMainWindowControls="clr-namespace:KanPlayWPF.Views.InfoMainWindowControls" 
    xmlns:KFoldableListView="clr-namespace:KanPlayWPF.Views.KFoldableListView" 
    x:Class="KanPlayWPF.Views.InfoMainWindow"
        Title="InfoMainWindow" Height="224" Width="320"
    Style="{StaticResource KMainWindowStyle}" MinWidth="320" MinHeight="224" SizeToContent="WidthAndHeight" ResizeMode="CanMinimize"
    ShowInTaskbar="False">

    <ControlBase:KWindowBase.DataContext>
        <vm:InfoMainWindowViewModel/>
    </ControlBase:KWindowBase.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid MinWidth="320" MinHeight="224">
        <TextBox Height="20" Margin="20,0" TextWrapping="Wrap" Text="{Binding infoTitleText}" VerticalAlignment="Top" IsReadOnly="True"/>
        <StackPanel>
            <ControlBase:KTitleFrame Height="20" VerticalAlignment="Top" MinHeight="20" MaxHeight="20" MinWidth="320" Background="{StaticResource TitleBrush}">
                <Button Content="X" Style="{StaticResource KTitleButtonStyle}" HorizontalAlignment="Right" Margin="0" VerticalAlignment="Top" Click="onCloseButtonClicked"/>
            </ControlBase:KTitleFrame>
            <InfoMainWindowControls:KOverviewTable VerticalAlignment="Top"/>

            <KFoldableListView:KFoldableListView x:Name="missionTable"  Margin="0" MinWidth="320" MinHeight="25"/>
            <KFoldableListView:KFoldableListView Margin="0" MinWidth="320" MinHeight="25"/>
            <KFoldableListView:KFoldableListView Margin="0" MinWidth="320" MinHeight="25"/>
            <KFoldableListView:KFoldableListView Margin="0" MinWidth="320" MinHeight="25"/>
            <KFoldableListView:KFoldableListView Margin="0" MinWidth="320" MinHeight="25"/>
            <KFoldableListView:KFoldableListView Margin="0" MinWidth="320" MinHeight="25"/>
        </StackPanel>

    </Grid>
</ControlBase:KWindowBase>
