<ControlBase:KTimerProgressBase
    xmlns:ControlBase="clr-namespace:KanPlayWPF.ControlBase"
    x:Class="KanPlayWPF.Views.TimerMainWindowControls.KTimerProgress"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:KanPlayWPF.Views"
        xmlns:vm="clr-namespace:KanPlayWPF.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    mc:Ignorable="d" 
    d:DesignWidth="232" d:DesignHeight="20" MinWidth="232" MinHeight="20" MaxWidth="232" MaxHeight="20">

    <!--
    <ControlBase:KTimerProgressBase.DataContext>
        <vm:KTimerProgressViewModel/>
    </ControlBase:KTimerProgressBase.DataContext>
    -->
    
     <i:Interaction.Triggers>
     
     	<!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
    	<!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
    	<!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています --> 
        
        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

    </i:Interaction.Triggers>
    
    <Grid>

        <ListView
            BorderBrush="{x:Null}"
            BorderThickness="0">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <ProgressBar Grid.ColumnSpan="2" Grid.ZIndex="0" Value="{Binding progressBarValue}" 
                                     Background="{StaticResource BGBrush}" 
                                     BorderBrush="{x:Null}"
                                     BorderThickness="0">
                            <ProgressBar.Template>
                                <ControlTemplate TargetType="{x:Type ProgressBar}">
                                    <Border BorderBrush="{x:Null}" 
                                BorderThickness="0" 
                                Background="{StaticResource BGBrush}" 
                                CornerRadius="0" Padding="0">
                                        <Grid x:Name="PART_Track">
                                            <Rectangle x:Name="PART_Indicator" HorizontalAlignment="Left" Fill="{Binding progressBarColor}" />
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </ProgressBar.Template>

                        </ProgressBar>
                        <Label Grid.Column="0" Grid.ZIndex="1" Content="{Binding leftString}"/>
                        <Label Grid.Column="1" Grid.ZIndex="1" Content="{Binding rightString}"/>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</ControlBase:KTimerProgressBase>
